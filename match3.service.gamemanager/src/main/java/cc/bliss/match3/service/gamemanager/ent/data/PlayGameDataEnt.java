package cc.bliss.match3.service.gamemanager.ent.data;

import cc.bliss.match3.service.gamemanager.config.ModuleConfig;
import com.google.gson.JsonObject;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
public class PlayGameDataEnt implements IDataEnt{
    //user info
    private long userId;
    private String userDisplayName;
    private long userGold;
    private long userEmerald;
    private long userTrophy;
    private int userWinLoseStreak;
    private long userCreatedAtMs;
    private int userIsNew;
    private String userPlatform;
    private String userVersion;
    private String userApp;
    private String userDevice;
    private String userIp;
    private String userCountryCode;
    private String userCurrencyCode;
    private String userUtmCampaign;
    private String userUtmSource;
    private String botHardMode;
    //playgame tracking
    private String componentUserDisplayName;
    private int componentUserId;
    private int explodeBoomCount;
    private int explodeDoubleSpecialCount;
    private int explodeHorizontalRocketCount;
    private int explodeSpecial5Count;
    private int explodeVerticalRocketCount;
    private int gemGreenCount;
    private int gemPinkCount;
    private int gemRedCount;
    private int gemYellowCount;
    private int gemBlueCount;
    private int makeBoomCount;
    private int makeHorizontalRocketCount;
    private int makeSpecial5Count;
    private int makeVerticalRocketCount;
    private long matchDurationMs;
    private long matchEndAtMs;
    private long matchFindDurationMs;
    private long matchId;
    private int merge3Count;
    private long sessionId;
    private int userComboCount;
    private int userComboDmg;
    private int userDmg;
    private int userHardLockCause;
    private int userHardLockUnlock;
    private int userHardLockedCount;
    private int userHighestComboCount;
    private int userHeroId;
    private int userHeroLevel;
    private String userHeroName;
    private int userHeroSkillLevel;
    private int userHeroTrophy;
    private int userHpRegen;
    private int userHpRemain;
    private int userHpUltiRegen;
    private String userJoinType;
    private int userManaRegen;
    private int userMediumLockCause;
    private int userMediumLockUnlock;
    private int userMediumLockedCount;
    private int matchResult;
    private String userSubJoinType;
    private int userUltiCount;
    private int userUltiDmg;
    private int userWinLoseTrophy;
    private int roundId;
    private int roundResult;
    private long roundDurationMs;
    private int matchRoundCount;
    private String componentBotType;
    //polish
    private int mergeLightXHrocket;
    private int mergeLightXVrocket;
    private int mergeLightXBomb;
    private int mergeRocketXRocket;
    private int mergeBombXBomb;
    private int mergeLightXLight;
    private int mergeBombXVrocket;
    private int mergeBombXHrocket;
    @Override
    public String toJsonString() {
        JsonObject jsonObject = new JsonObject();
        //userinfo
        jsonObject.addProperty("user_id", userId);
        jsonObject.addProperty("user_display_name", userDisplayName);
        jsonObject.addProperty("user_gold", userGold);
        jsonObject.addProperty("user_emerald", userEmerald);
        jsonObject.addProperty("user_win_lose_streak", userWinLoseStreak);
        jsonObject.addProperty("user_created_at_ms", userCreatedAtMs);
        jsonObject.addProperty("user_is_new", userIsNew);
        jsonObject.addProperty("user_platform", userPlatform);
        jsonObject.addProperty("user_version", userVersion);
        jsonObject.addProperty("user_app", userApp);
        jsonObject.addProperty("user_trophy", userTrophy);
        jsonObject.addProperty("user_device", userDevice);
        jsonObject.addProperty("user_ip", userIp);
        jsonObject.addProperty("user_country_code", userCountryCode);
        jsonObject.addProperty("user_utm_source", userUtmSource);
        jsonObject.addProperty("user_utm_campaign", userUtmCampaign);
        jsonObject.addProperty("bot_hard_mode", botHardMode);
        //playgame data
        jsonObject.addProperty("component_user_display_name", componentUserDisplayName);
        jsonObject.addProperty("component_user_id", componentUserId);
        jsonObject.addProperty("explode_boom_count", explodeBoomCount);
        jsonObject.addProperty("explode_double_special_count", explodeDoubleSpecialCount);
        jsonObject.addProperty("explode_horizontal_rocket_count", explodeHorizontalRocketCount);
        jsonObject.addProperty("explode_special_5_count", explodeSpecial5Count);
        jsonObject.addProperty("explode_vertical_rocket_count", explodeVerticalRocketCount);
        jsonObject.addProperty("gem_green_count", gemGreenCount);
        jsonObject.addProperty("gem_pink_count", gemPinkCount);
        jsonObject.addProperty("gem_red_count", gemRedCount);
        jsonObject.addProperty("gem_yellow_count", gemYellowCount);
        jsonObject.addProperty("gem_blue_count", gemBlueCount);
        jsonObject.addProperty("make_boom_count", makeBoomCount);
        jsonObject.addProperty("make_horizontal_rocket_count", makeHorizontalRocketCount);
        jsonObject.addProperty("make_special_5_count", makeSpecial5Count);
        jsonObject.addProperty("make_vertical_rocket_count", makeVerticalRocketCount);
        jsonObject.addProperty("match_duration_ms", matchDurationMs);
        jsonObject.addProperty("match_end_at_ms", matchEndAtMs);
        jsonObject.addProperty("match_find_duration_ms", matchFindDurationMs);
        jsonObject.addProperty("match_id", matchId);
        jsonObject.addProperty("merge_3_count", merge3Count);
        jsonObject.addProperty("session_id", sessionId);
        jsonObject.addProperty("user_combo_count", userComboCount);
        jsonObject.addProperty("user_combo_dmg", userComboDmg);
        jsonObject.addProperty("user_dmg", userDmg);
        jsonObject.addProperty("user_hard_lock_cause", userHardLockCause);
        jsonObject.addProperty("user_hard_lock_unlock", userHardLockUnlock);
        jsonObject.addProperty("user_hard_locked_count", userHardLockedCount);
        jsonObject.addProperty("user_highest_combo_count", userHighestComboCount);
        jsonObject.addProperty("user_hero_id", userHeroId);
        jsonObject.addProperty("user_hero_level", userHeroLevel);
        jsonObject.addProperty("user_hero_name", userHeroName);
        jsonObject.addProperty("user_hero_skill_level", userHeroSkillLevel);
        jsonObject.addProperty("user_hero_trophy", userHeroTrophy);
        jsonObject.addProperty("user_hp_regen", userHpRegen);
        jsonObject.addProperty("user_hp_remain", userHpRemain);
        jsonObject.addProperty("user_hp_ulti_regen", userHpUltiRegen);
        jsonObject.addProperty("user_join_type", userJoinType);
        jsonObject.addProperty("user_mana_regen", userManaRegen);
        jsonObject.addProperty("user_medium_lock_cause", userMediumLockCause);
        jsonObject.addProperty("user_medium_lock_unlock", userMediumLockUnlock);
        jsonObject.addProperty("user_medium_locked_count", userMediumLockedCount);
        jsonObject.addProperty("match_result", matchResult);
        jsonObject.addProperty("user_sub_join_type", userSubJoinType);
        jsonObject.addProperty("user_ulti_count", userUltiCount);
        jsonObject.addProperty("user_ulti_dmg", userUltiDmg);
        jsonObject.addProperty("user_win_lose_trophy", userWinLoseTrophy);
        jsonObject.addProperty("round_id", roundId);
        jsonObject.addProperty("round_result", roundResult);
        jsonObject.addProperty("round_duration_ms", roundDurationMs);
        jsonObject.addProperty("match_round_count", matchRoundCount);
        jsonObject.addProperty("component_bot_type", componentBotType);
        jsonObject.addProperty("merge_light_x_hrocket", mergeLightXHrocket);
        jsonObject.addProperty("merge_light_x_vrocket", mergeLightXVrocket);
        jsonObject.addProperty("merge_light_x_boom", mergeLightXBomb);
        jsonObject.addProperty("merge_light_x_light", mergeLightXLight);
        jsonObject.addProperty("merge_boom_x_vrocket", mergeBombXVrocket);
        jsonObject.addProperty("merge_boom_x_hrocket", mergeBombXHrocket);
        jsonObject.addProperty("merge_boom_x_boom", mergeBombXBomb);
        jsonObject.addProperty("merge_rocket_x_rocket", mergeRocketXRocket);
        jsonObject.addProperty("server_id", ModuleConfig.SERVER_ID);
        return jsonObject.toString();
    }
}
